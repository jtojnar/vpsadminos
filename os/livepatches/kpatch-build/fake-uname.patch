diff --git a/kernel/sys.c b/kernel/sys.c
index 952925ee888b..bcc68e9c49a0 100644
--- a/kernel/sys.c
+++ b/kernel/sys.c
@@ -1233,6 +1233,7 @@ DECLARE_RWSEM(uts_sem);
 #define override_architecture(name)	0
 #endif
 
+#include <linux/vpsadminos-livepatch.h>
 /*
  * Work around broken programs that cannot handle "Linux 3.0".
  * Instead we map 3.x to 2.6.40+x, so e.g. 3.0 would be 2.6.40
@@ -1261,11 +1262,30 @@ static int override_release(char __user *release, size_t len)
 		copy = clamp_t(size_t, len, 1, sizeof(buf));
 		copy = scnprintf(buf, copy, "2.6.%u%s", v, rest);
 		ret = copy_to_user(release, buf, copy + 1);
+	} else {
+		const char *rest = UTS_RELEASE;
+		char buf[65] = { 0 };
+		int ndots = 0;
+		size_t copy;
+
+		while (*rest) {
+			if (*rest == '.' && ++ndots >= 3)
+				break;
+			if (!isdigit(*rest) && *rest != '.')
+				break;
+			rest++;
+		}
+		copy = clamp_t(size_t, len, 1, sizeof(buf));
+		copy = scnprintf(buf, copy, "%s.%s%s",
+			LIVEPATCH_ORIG_KERNEL_VERSION, LIVEPATCH_NAME, rest);
+		ret = copy_to_user(release, buf, copy + 1);
+		ret = 0;
 	}
 	return ret;
 }
 
-SYSCALL_DEFINE1(newuname, struct new_utsname __user *, name)
+#include "kpatch-syscall.h"
+KPATCH_SYSCALL_DEFINE1(newuname, struct new_utsname __user *, name)
 {
 	struct new_utsname tmp;
 
@@ -1286,7 +1306,8 @@ SYSCALL_DEFINE1(newuname, struct new_utsname __user *, name)
 /*
  * Old cruft
  */
-SYSCALL_DEFINE1(uname, struct old_utsname __user *, name)
+#include "kpatch-syscall.h"
+KPATCH_SYSCALL_DEFINE1(uname, struct old_utsname __user *, name)
 {
 	struct old_utsname tmp;
 
@@ -1306,7 +1327,8 @@ SYSCALL_DEFINE1(uname, struct old_utsname __user *, name)
 	return 0;
 }
 
-SYSCALL_DEFINE1(olduname, struct oldold_utsname __user *, name)
+#include "kpatch-syscall.h"
+KPATCH_SYSCALL_DEFINE1(olduname, struct oldold_utsname __user *, name)
 {
 	struct oldold_utsname tmp;
 
